{"version":3,"sources":["main.js","/source/main.js"],"names":["initApp","ko","applyBindings","app","viewModel","lastQueryLocation","google","maps","LatLng","lat","lng","GOOGLE_MAP_OPTIONS","zoom","center","mapTypeId","MapTypeId","ROADMAP","mapTypeControl","streetViewControl","map","Map","document","getElementById","model","navigator","geolocation","getCurrentPosition","position","pos","coords","latitude","longitude","controller","removeAllPlaces","setCenter","addListener","_","throttle","loadPlaces","isZoomedOut","distance","geometry","spherical","computeDistanceBetween","isLoading","FoursquareRequestOptions","ll","radius","section","client_id","client_secret","v","$","get","addPlaces","fail","isFailureModalVisible","always","Place","item","venue","location","name","this","stash","isSelected","observable","marker","Marker","icon","G_MARKER","onClickMarker","res","response","groups","items","forEach","placesHash","has","id","place","places","push","set","markers","length","removePlacesFromStart","N","i","shift","setMap","placeDetails","onClickPlace","oldSelected","setIcon","isPlaceDetailsVisible","select","panTo","window","matchMedia","matches","removeClass","filterMarkers","filteredPlaces","path","fillColor","fillOpacity","scale","strokeColor","strokeWeight","G_MARKER_SELECTED","googleError","addClass","observableArray","extend","rateLimit","WeakMap","hidePlaceDetails","hideFailureModal","textFilter","pureComputed","text","trim","toLowerCase","filter","indexOf","isPlacesNotLoaded","prototype"],"mappings":"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","file":"main.js","sourcesContent":["'use strict'; /* eslint-env browser */\n(function () {\n  'use strict';\n\n  var app = {};\n  var lastQueryLocation = void 0;\n\n  // google map markers\n  var G_MARKER = {\n    path: 'M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z',\n    fillColor: '#607d8b',\n    fillOpacity: 0.7,\n    scale: 0.7,\n    strokeColor: '#607d8b',\n    strokeWeight: 3 };\n\n  var G_MARKER_SELECTED = {\n    path: 'M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z',\n    fillColor: '#009688',\n    fillOpacity: 0.8,\n    scale: 0.8,\n    strokeColor: '#009688',\n    strokeWeight: 3 };\n\n\n  /* CONTROLLER */\n  app.controller = {\n    initApp: initApp,\n    loadPlaces: loadPlaces, // load places from Foursquare\n\n    onClickPlace: onClickPlace, // handle sidebar clicks\n    onClickMarker: onClickMarker, // handle map clicks\n\n    addPlaces: addPlaces,\n    removePlacesFromStart: removePlacesFromStart,\n    removeAllPlaces: removeAllPlaces,\n\n    googleError: function googleError() {\n      $('#failure-modal-google').addClass('is-visible');\n    } };\n\n\n  /* MODEL */\n  app.model = {\n    map: null, // google map object\n\n    places: ko.observableArray([]).extend({ rateLimit: 100 }), // main places storage\n    placesHash: new Map(), // helps to search place from foursquare place id\n    markers: new WeakMap() // helps to search place from google marker\n  };\n\n  /* VIEW MODEL*/\n  app.viewModel = {\n    //Selected place\n    placeDetails: ko.observable(),\n    isPlaceDetailsVisible: ko.observable(false),\n    hidePlaceDetails: function hidePlaceDetails() {app.viewModel.isPlaceDetailsVisible(false);},\n\n    // error message\n    isFailureModalVisible: ko.observable(false),\n    hideFailureModal: function hideFailureModal() {app.viewModel.isFailureModalVisible(false);},\n\n    textFilter: ko.observable(''),\n\n    filteredPlaces: ko.pureComputed(function () {\n      var filteredPlaces = void 0;\n      var text = app.viewModel.textFilter().trim().toLowerCase(),\n      places = app.model.places();\n      if (text) {\n        filteredPlaces = places.filter(function (place) {return place.name.toLowerCase().indexOf(text) !== -1;});\n      } else {\n        filteredPlaces = places; // show all if search field is empty\n      }\n\n      filterMarkers(filteredPlaces);\n\n      return filteredPlaces;\n    }),\n\n    isPlacesNotLoaded: ko.pureComputed(function () {return !app.model.places().length;}),\n\n    // show spinner?\n    isLoading: ko.observable(false),\n\n    isZoomedOut: ko.observable(false),\n\n    onClickPlace: app.controller.onClickPlace };\n\n\n  /**\n                                                  *  create a map, add map listener\n                                                  */\n  function initApp() {\n    ko.applyBindings(app.viewModel);\n    lastQueryLocation = new google.maps.LatLng({ lat: 0, lng: 0 });\n\n    // init google map\n    var GOOGLE_MAP_OPTIONS = {\n      zoom: 16,\n      center: new google.maps.LatLng(37.7703706, -122.3871226),\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n      mapTypeControl: false,\n      streetViewControl: false };\n\n    var map = new google.maps.Map(document.getElementById('google-map'), GOOGLE_MAP_OPTIONS);\n    app.model.map = map;\n\n    // Try HTML5 geolocation\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var pos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude };\n\n\n        app.controller.removeAllPlaces();\n        map.setCenter(pos);\n      }, function () {\n        //handleLocationError\n      });\n    } else {\n        // Browser doesn't support Geolocation\n      }\n\n    map.addListener('bounds_changed', _.throttle(app.controller.loadPlaces, 2000));\n  }\n\n  /**\n     * load places from 4square\n     */\n  function loadPlaces() {\n    var map = app.model.map;\n    app.viewModel.isZoomedOut(map.zoom < 15);\n\n    // dont ask 4square on big areas\n    if (map.zoom < 15) return;\n\n    //distance between this point and last request\n    var distance = google.maps.geometry.spherical.computeDistanceBetween(lastQueryLocation, map.center);\n    // don't load new data if point is too close to previous search\n    if (distance < 1500) return;\n    lastQueryLocation = map.center;\n    app.viewModel.isLoading(true);\n\n    // load data from foursquare\n    //TODO idea, calculate radius from map zoom\n    var FoursquareRequestOptions = {\n      ll: map.center.lat() + ',' + map.center.lng(),\n      radius: 2000,\n      section: 'drinks',\n      client_id: 'E54BQ11LCWJ15Q0FH4MELITI2CZQ5KSJOU53TNRARJ3HHNXN',\n      client_secret: 'T4O0ZURMG00IGUTU4NKSQZ4DH0E5LGLMDAE20OJWPXMBD10Y',\n      v: 20161025 };\n\n    $.get('https://api.foursquare.com/v2/venues/explore', FoursquareRequestOptions, app.controller.addPlaces).\n    fail(function () {\n      app.viewModel.isFailureModalVisible(true);\n    }).\n    always(function () {\n      app.viewModel.isLoading(false);\n    });\n  }\n\n  /**\n     * map place constructor\n     * @param item - one place from foursquare API response\n     * @constructor\n     */\n  function Place(item) {\n    var map = app.model.map;\n    var lat = item.venue.location.lat,\n    lng = item.venue.location.lng,\n    name = item.venue.name;\n\n    this.stash = item;\n    this.location = { lat: lat, lng: lng };\n    this.name = name;\n    this.isSelected = ko.observable(false);\n    this.marker = new google.maps.Marker({\n      map: map,\n      position: new google.maps.LatLng(lat, lng),\n      icon: G_MARKER });\n\n    this.marker.addListener('click', app.controller.onClickMarker);\n  }\n\n  /**\n     * change marker icon on place selection\n     */\n  Place.prototype.select = function () {\n    this.marker.setIcon(G_MARKER_SELECTED);\n  };\n\n  /**\n      * add places to the map\n      * @param res - results from foursquare request\n      */\n  function addPlaces(res) {\n    //app.controller.removeAllPlaces();\n\n    res.response.groups[0].items.forEach(function (item) {\n      if (app.model.placesHash.has(item.venue.id)) return; // don't allow to double items on the map\n\n      var place = new Place(item);\n      app.model.places.push(place);\n      app.model.placesHash.set(item.venue.id, place);\n      app.model.markers.set(place.marker, place);\n\n    });\n\n    // not more than 150 markers on the map\n    var length = app.model.places().length;\n    if (length > 150) app.controller.removePlacesFromStart(length - 150);\n\n    app.viewModel.isLoading(false);\n  }\n\n  /**\n     * remove N places form the beginning of tha places array\n     * @param N\n     */\n  function removePlacesFromStart(N) {\n    var place = void 0;\n    for (var i = 0; i < N; i++) {\n      place = app.model.places.shift();\n      place.marker.setMap(null);\n      app.model.placesHash.delete(place.stash.venue.id);\n      if (app.viewModel.placeDetails() === place) app.viewModel.placeDetails(null);\n    }\n  }\n\n  function removeAllPlaces() {\n    var N = app.model.places().length;\n    app.controller.removePlacesFromStart(N);\n  }\n\n  /**\n     * user clicks on a map marker\n     */\n  function onClickMarker() {\n    var place = app.model.markers.get(this);\n    onClickPlace(place);\n  }\n\n  /**\n     * user clicks on a place in the menu\n     */\n  function onClickPlace(place) {\n    var oldSelected = app.viewModel.placeDetails();\n    if (oldSelected === place) return;\n\n    if (oldSelected) {\n      oldSelected.isSelected(false);\n      oldSelected.marker.setIcon(G_MARKER);\n    }\n\n    //add place to selected and show place details modal window\n    place.isSelected(true);\n    app.viewModel.placeDetails(place);\n    app.viewModel.isPlaceDetailsVisible(true);\n\n    // change marker icon and move map to this marker\n    place.select();\n    app.model.map.panTo(place.location);\n\n    // hide side menu on small screens after click\n    if (window.matchMedia('(max-width: 426px)').matches) {\n      $('.mdl-layout__drawer').removeClass('is-visible');\n      $('.mdl-layout__obfuscator').removeClass('is-visible');\n    }\n  };\n\n\n  function filterMarkers(filteredPlaces) {\n    var places = app.model.places();\n    //hide all\n    places.forEach(function (place) {return place.marker.setMap(null);});\n    //show filtered\n    filteredPlaces.forEach(function (place) {return place.marker.setMap(app.model.map);});\n  }\n\n  // express some globals\n  window.initApp = app.controller.initApp;\n  window.googleError = app.controller.googleError;\n\n})();\n//# sourceMappingURL=data:application/json;base64,\n","/* eslint-env browser */\n(function () {\n  'use strict';\n\n  const app = {};\n  let lastQueryLocation;\n\n  // google map markers\n  const G_MARKER = {\n    path: 'M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z',\n    fillColor: '#607d8b',\n    fillOpacity: 0.7,\n    scale: 0.7,\n    strokeColor: '#607d8b',\n    strokeWeight: 3\n  };\n  const G_MARKER_SELECTED = {\n    path: 'M0-48c-9.8 0-17.7 7.8-17.7 17.4 0 15.5 17.7 30.6 17.7 30.6s17.7-15.4 17.7-30.6c0-9.6-7.9-17.4-17.7-17.4z',\n    fillColor: '#009688',\n    fillOpacity: 0.8,\n    scale: 0.8,\n    strokeColor: '#009688',\n    strokeWeight: 3\n  };\n\n  /* CONTROLLER */\n  app.controller = {\n    initApp: initApp,\n    loadPlaces: loadPlaces,           // load places from Foursquare\n\n    onClickPlace: onClickPlace,      // handle sidebar clicks\n    onClickMarker: onClickMarker,      // handle map clicks\n\n    addPlaces: addPlaces,\n    removePlacesFromStart: removePlacesFromStart,\n    removeAllPlaces: removeAllPlaces,\n\n    googleError() {\n      $('#failure-modal-google').addClass('is-visible');\n    }\n  };\n\n  /* MODEL */\n  app.model = {\n    map: null,                      // google map object\n\n    places: ko.observableArray([]).extend({rateLimit: 100}), // main places storage\n    placesHash: new Map(),          // helps to search place from foursquare place id\n    markers: new WeakMap()          // helps to search place from google marker\n  };\n\n  /* VIEW MODEL*/\n  app.viewModel = {\n    //Selected place\n    placeDetails: ko.observable(),\n    isPlaceDetailsVisible: ko.observable(false),\n    hidePlaceDetails: () => { app.viewModel.isPlaceDetailsVisible(false) },\n\n    // error message\n    isFailureModalVisible: ko.observable(false),\n    hideFailureModal: () => { app.viewModel.isFailureModalVisible(false) },\n\n    textFilter: ko.observable(''),\n\n    filteredPlaces: ko.pureComputed(() => {\n      let filteredPlaces;\n      let text = app.viewModel.textFilter().trim().toLowerCase(),\n        places = app.model.places();\n      if (text) {\n        filteredPlaces = places.filter(place => place.name.toLowerCase().indexOf(text) !== -1);\n      } else {\n        filteredPlaces = places; // show all if search field is empty\n      }\n\n      filterMarkers(filteredPlaces);\n\n      return filteredPlaces;\n    }),\n\n    isPlacesNotLoaded: ko.pureComputed(() => !app.model.places().length),\n\n    // show spinner?\n    isLoading: ko.observable(false),\n\n    isZoomedOut: ko.observable(false),\n\n    onClickPlace: app.controller.onClickPlace\n  };\n\n  /**\n   *  create a map, add map listener\n   */\n  function initApp() {\n    ko.applyBindings(app.viewModel);\n    lastQueryLocation = new google.maps.LatLng({lat: 0, lng: 0});\n\n    // init google map\n    const GOOGLE_MAP_OPTIONS = {\n      zoom: 16,\n      center: new google.maps.LatLng(37.7703706, -122.3871226),\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n      mapTypeControl: false,\n      streetViewControl: false\n    };\n   const map = new google.maps.Map(document.getElementById('google-map'), GOOGLE_MAP_OPTIONS);\n    app.model.map = map;\n\n    // Try HTML5 geolocation\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var pos = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        };\n\n        app.controller.removeAllPlaces();\n        map.setCenter(pos);\n      }, function () {\n        //handleLocationError\n      });\n    } else {\n      // Browser doesn't support Geolocation\n    }\n\n    map.addListener('bounds_changed', _.throttle(app.controller.loadPlaces, 2000));\n  }\n\n  /**\n   * load places from 4square\n   */\n  function loadPlaces() {\n    const map = app.model.map;\n    app.viewModel.isZoomedOut(map.zoom < 15);\n\n    // dont ask 4square on big areas\n    if (map.zoom < 15) return;\n\n    //distance between this point and last request\n    let distance = google.maps.geometry.spherical.computeDistanceBetween(lastQueryLocation, map.center);\n    // don't load new data if point is too close to previous search\n    if (distance < 1500) return;\n    lastQueryLocation = map.center;\n    app.viewModel.isLoading(true);\n\n    // load data from foursquare\n    //TODO idea, calculate radius from map zoom\n    const FoursquareRequestOptions = {\n      ll: map.center.lat() + ',' + map.center.lng(),\n      radius: 2000,\n      section: 'drinks',\n      client_id: 'E54BQ11LCWJ15Q0FH4MELITI2CZQ5KSJOU53TNRARJ3HHNXN',\n      client_secret: 'T4O0ZURMG00IGUTU4NKSQZ4DH0E5LGLMDAE20OJWPXMBD10Y',\n      v: 20161025\n    };\n    $.get('https://api.foursquare.com/v2/venues/explore', FoursquareRequestOptions, app.controller.addPlaces)\n      .fail(function () {\n        app.viewModel.isFailureModalVisible(true);\n      })\n      .always(function () {\n        app.viewModel.isLoading(false);\n      });\n  }\n\n  /**\n   * map place constructor\n   * @param item - one place from foursquare API response\n   * @constructor\n   */\n  function Place(item) {\n    const map = app.model.map;\n    const lat = item.venue.location.lat,\n      lng = item.venue.location.lng,\n      name = item.venue.name;\n\n    this.stash = item;\n    this.location = {lat, lng};\n    this.name = name;\n    this.isSelected = ko.observable(false);\n    this.marker = new google.maps.Marker({\n      map: map,\n      position: new google.maps.LatLng(lat, lng),\n      icon: G_MARKER,\n    });\n    this.marker.addListener('click', app.controller.onClickMarker);\n  }\n\n  /**\n   * change marker icon on place selection\n   */\n  Place.prototype.select = function() {\n    this.marker.setIcon(G_MARKER_SELECTED);\n  };\n\n  /**\n   * add places to the map\n   * @param res - results from foursquare request\n   */\n  function addPlaces(res) {\n    //app.controller.removeAllPlaces();\n\n    res.response.groups[0].items.forEach(function (item) {\n      if (app.model.placesHash.has(item.venue.id)) return; // don't allow to double items on the map\n\n      const place = new Place(item);\n      app.model.places.push(place);\n      app.model.placesHash.set(item.venue.id, place);\n      app.model.markers.set(place.marker, place);\n\n    });\n\n    // not more than 150 markers on the map\n    let length = app.model.places().length;\n    if (length > 150) app.controller.removePlacesFromStart(length - 150);\n\n    app.viewModel.isLoading(false);\n  }\n\n  /**\n   * remove N places form the beginning of tha places array\n   * @param N\n   */\n  function removePlacesFromStart(N) {\n    let place;\n    for (let i = 0; i < N; i++) {\n      place = app.model.places.shift();\n      place.marker.setMap(null);\n      app.model.placesHash.delete(place.stash.venue.id);\n      if (app.viewModel.placeDetails() === place) app.viewModel.placeDetails(null);\n    }\n  }\n\n  function removeAllPlaces() {\n    let N = app.model.places().length;\n    app.controller.removePlacesFromStart(N);\n  }\n\n  /**\n   * user clicks on a map marker\n   */\n  function onClickMarker() {\n    const place = app.model.markers.get(this);\n    onClickPlace(place);\n  }\n\n  /**\n   * user clicks on a place in the menu\n   */\n  function onClickPlace(place) {\n    const oldSelected = app.viewModel.placeDetails();\n    if (oldSelected === place) return;\n\n    if(oldSelected) {\n      oldSelected.isSelected(false);\n      oldSelected.marker.setIcon(G_MARKER);\n    }\n\n    //add place to selected and show place details modal window\n    place.isSelected(true);\n    app.viewModel.placeDetails(place);\n    app.viewModel.isPlaceDetailsVisible(true);\n\n    // change marker icon and move map to this marker\n    place.select();\n    app.model.map.panTo(place.location);\n\n    // hide side menu on small screens after click\n    if (window.matchMedia('(max-width: 426px)').matches) {\n      $('.mdl-layout__drawer').removeClass('is-visible');\n      $('.mdl-layout__obfuscator').removeClass('is-visible');\n    }\n  };\n\n\n  function filterMarkers(filteredPlaces) {\n    const places = app.model.places();\n    //hide all\n    places.forEach((place) => place.marker.setMap(null));\n    //show filtered\n    filteredPlaces.forEach((place) => place.marker.setMap(app.model.map));\n  }\n\n  // express some globals\n  window.initApp = app.controller.initApp;\n  window.googleError = app.controller.googleError;\n\n})();\n"],"sourceRoot":"/source/"}